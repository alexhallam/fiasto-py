name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

permissions:
  contents: write

env:
  # Single abi3 wheel per platform for CPython >= 3.8
  PYO3_USE_ABI3_FORWARD_COMPATIBILITY: 1

jobs:
  build-linux:
    name: Build Linux (manylinux2014 x86_64)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # maturin-action installs Rust + Python toolchains as needed
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          command: build
          manylinux: "2014"
          args: >-
            --release
            --compatibility manylinux2014
            --find-interpreter
          # default target is x86_64-unknown-linux-gnu inside manylinux

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux
          path: target/wheels/*

  build-macos:
    name: Build macOS (universal2)
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          command: build
          args: >-
            --release
            --universal2
            --find-interpreter
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos
          path: target/wheels/*

  build-windows:
    name: Build Windows (x86_64)
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          command: build
          args: >-
            --release
            --find-interpreter
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows
          path: target/wheels/*

  build-sdist:
    name: Build sdist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: target/wheels/*.tar.gz

  release:
    name: Create GitHub Release & Publish to PyPI
    runs-on: ubuntu-latest
    needs: [build-linux, build-macos, build-windows, build-sdist]
    steps:
      - uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist-collect

      - name: Move artifacts to dist/
        run: |
          mkdir -p dist
          find dist-collect -name "*.whl" -exec mv {} dist/ \;
          find dist-collect -name "*.tar.gz" -exec mv {} dist/ \;
          ls -l dist

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        with:
          command: upload
          args: --skip-existing dist/*
        env:
          # maturin uses __token__ by default if MATURIN_USERNAME is unset,
          # but we set it explicitly for clarity.
          MATURIN_USERNAME: __token__
          MATURIN_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
          PYO3_USE_ABI3_FORWARD_COMPATIBILITY: 1
